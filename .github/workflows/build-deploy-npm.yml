name: Build & Deploy NPM
on:
  workflow_dispatch: # Allow running the workflow manually from the GitHub UI
  push:
    branches:
      - 'main'       # Run the workflow when pushing to the main branch
  pull_request:
    branches:
      - '*'          # Run the workflow for all pull requests
  release:
    types:
      - published    # Run the workflow when a new GitHub release is published

env:
  NpmDirectory: npm/dist/@bpits/results-ngx

defaults:
  run:
    shell: pwsh
    
jobs:
  create_npm:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: Detect version
        id: get_version
        run: |
          $SEMVER="${{ startsWith(github.ref, 'refs/tags/v') && github.ref_name || '' }}".ToLower().Replace("v", "")
          echo "VERSION=$SEMVER"
          echo "VERSION=$SEMVER" >> $env:GITHUB_OUTPUT

      - name: Show detected version
        run: echo '${{ toJSON(steps.get_version.outputs) }}'

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          sparse-checkout: 'npm'
          sparse-checkout-cone-mode: false
      
      # This step is needed because we can't check out a subdirectory.
      # Therefore, all `npm/` files should be moved to the project root.
      - name: Move `npm` files to root
        run: |
          Write-Output "Directory listing BEFORE moving to npm/"
          Get-ChildItem -Force | Select-Object Mode, LastWriteTime, Length, Name | Format-Table -AutoSize
          Get-ChildItem -Path "npm" -Force | Move-Item -Destination "."
          Remove-Item -Recurse -Force -Path "npm"
          
          Write-Output "Directory listing AFTER moving to npm/"
          Get-ChildItem -Force | Select-Object Mode, LastWriteTime, Length, Name | Format-Table -AutoSize

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Install NPM packages
        run: npm ci

      - name: Build @bpits/results-ngx
        run: npm run build

      - name: Store NPM artifact
        uses: actions/upload-artifact@v4
        with:
          name: npm
          if-no-files-found: error
          retention-days: 7
          path: 'dist/bpits/results-ngx/**'

  deploy_npm:
    # Publish only when creating a GitHub Release
    # https://docs.github.com/en/repositories/releasing-projects-on-github/managing-releases-in-a-repository
    # You can update this logic if you want to manage releases differently
    if: github.event_name == 'release'
    name: Publish NPM
    runs-on: ubuntu-latest
    needs: [ create_npm ]
    steps:
      - name: Download NPM artifact
        uses: actions/download-artifact@v4
        with:
          name: npm
          path: ${{ env.NpmDirectory }}
      
      # Publish all NPM packages.
      - name: Publish NPM package
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
